# Copyright 2016 Peter MÃ¶ller, Pierre Moreau
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
# 
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


######################################################################################
#############################     D I S K   I N F O     ##############################
######################################################################################

printf "\n${ESC}${WhiteBack};${BlackFont};${BoldFace}mDisk info:                                        ${Reset}\n"

if [ -z "${OS/Linux/}" ]; then
  echo ""
elif [ -z "${OS/Darwin/}" ]; then
  system_profiler -detailLevel mini SPUSBDataType SPSerialATADataType SPSASDataType SPNVMeDataType 2>/dev/null | egrep ":$|BSD Name:|Medium Type:|Physical Interconnect:|S.M.A.R.T. status:|TRIM Support:" > $DiskTempFile
  # This will produce a list of disks, like this:
  # USB:
  #  USB 3.0 Bus:
  #      USB3.0 Hub             :
  #          My Book 1144:
  #            Media:
  #              My Book 1144:
  #                BSD Name: disk1
  #      BRCM20702 Hub:
  #          Bluetooth USB Host Controller:
  #      FaceTime HD Camera (Built-in):
  #      Apple USB SuperDrive:
  #      USB2.0 Hub             :
  #          USB Mouse:
  #          Keyboard Hub:
  #              Apple Keyboard:
  #      EPSON Epson Stylus SX440 Series:
  # SATA/SATA Express:
  #     Apple SSD Controller:
  #       Physical Interconnect: PCI
  #         APPLE SSD SM0512F:
  #           BSD Name: disk0
  #           Medium Type: Solid State
  #           TRIM Support: Yes
  #           S.M.A.R.T. status: Verified
  #     Intel 8 Series Chipset:
  # ----
  # SAS:
  #     SAS Domain 0:
  #         SCSI Target Device @ 0:
  #             SCSI Logical Unit @ 0:
  #               BSD Name: disk3
  #               S.M.A.R.T. status: Not Supported
  #         SCSI Target Device @ 127:
  #             SCSI Logical Unit @ 0:
  # ----
  # SATA/SATA Express:
  #     Intel 6 Series Chipset:
  #       Physical Interconnect: SATA
  #         WDC WD5000BTKT-40MD3T0:
  #           BSD Name: disk0
  #           Medium Type: Rotational
  #           S.M.A.R.T. status: Verified
  #     Intel 6 Series Chipset:
  #       Physical Interconnect: SATA
  #         WDC WD5000BTKT-40MD3T0:
  #           BSD Name: disk1
  #           Medium Type: Rotational
  #           S.M.A.R.T. status: Verified
  
  # Print head of disk list
  printf "${ESC}${UnderlineFace}m${FormatstringDisk}${Reset}\n" "BSD Name"  "Size" "Medium Type" "S.M.A.R.T." "TRIM" "Bus"
  # Iterate through the list of disks:
  for i in $(diskutil list 2>/dev/null | egrep "^\/dev" | sed 's;/dev/;;' | egrep -v "virtual|disk image" | awk '{print $1}')
  # Ex: i='disk0'
  do
    # First: it may be a Core Storage volume (FileVault2 or the like)
    if [ -z "$(grep $i $DiskTempFile)" ]; then
      # Look for 'Logical Volume'
      if [ -n "$(diskutil cs list | grep -B2 $i | grep "Logical Volume")" ]; then
        Bus=""
        SMART=""
        MediumType="Core Storage"
        TRIM=""
        Size="$(diskutil list | grep -v "/dev/$i" | grep "${i}$" | cut -c58-67)"
      fi
    else
      Bus="$(egrep "^[A-Z].*:$| $i" $DiskTempFile | grep -B1 $i | head -1 | cut -d: -f1)"
      # Ex: Bus='SATA/SATA Express'
      SMART="$(egrep -B3 -A3 "$i" $DiskTempFile | grep "S.M.A.R.T. status:" | cut -d: -f2 | sed 's/^ //')"
      # Ex: SMART='Verified'
      TRIM="$(egrep -B3 -A3 "$i" $DiskTempFile | grep "TRIM Support:" | cut -d: -f2 | sed 's/^ //')"
      # Ex: TRIM='Yes'
      MediumType="$(egrep -B3 -A3 "$i" $DiskTempFile | grep "Medium Type:" | cut -d: -f2 | sed 's/^ //')"
      # Ex: MediumType='Solid State'
      Size="$(diskutil list | grep -v "/dev/$i" | grep "${i}$" | awk '{print $3" "$4}' | sed 's/*//')"
      # Ex: Size='500.3 GB'
    fi
    printf "$FormatstringDisk\n" "$i" "$Size" "${MediumType:---}" "${SMART:---}" "${TRIM:---}" "$Bus"
  done

  echo

  # Secondly, get a list of File Systems on the partitions
  printf "${ESC}${UnderlineFace}m${FormatstringFS}${Reset}\n" "Partition" "Mount Point" "Available" "File System"
  for i in $(diskutil list 2>/dev/null | egrep "^\/dev" | sed 's;/dev/;;' | egrep -v "virtual|disk image" | awk '{print $1}')
  # Ex: i='disk0'
  do
    PartList="$(diskutil list $i | egrep -v "^\/|^ *[#0]:" | awk '{print $NF}')"
    # Ex: PartList='disk3s1 disk3s2 disk3s3'
    for j in $PartList
    # Ex: j='disk1s2'
    do
      MountPoint="$(df 2>/dev/null | grep $j | awk '{print $NF}')"
      # Ex: MountPoint='/Volumes/RAID'
      # Proceed only if we have a MountPoint
      if [ -n "$MountPoint" ]; then
        FS="$(diskutil info "$MountPoint" | grep "Name (User Visible):" | cut -d: -f2 | sed 's/^ *//')"
        # Ex: FS='Mac OS Extended (Case-sensitive, Journaled)'
        Avail="$(df -kh "$MountPoint" | grep $j | awk '{print $4}')"
        # Ex: Avail='48%'
        Filled="$(echo "100 - $(df -kh "$MountPoint" | grep $j | awk '{print $5}' | sed 's/\%$//')" | bc)"
        # Ex: Filled='52'
        printf "${FormatstringFS}\n" "$j" "$MountPoint" "${Avail} (${Filled}%)" "$FS"
      fi
    done
  done

  [[ $Info -eq 1 ]] &&  echo "(Use \"diskutil\" and \"system_profiler -detailLevel mini SPUSBDataType SPSerialATADataType SPSASDataType SPNVMeDataType\" to see details about your disks)"
fi